<?php

function total_assets() {
  $dbh = db_connect('core');
  $result = 0;
  $query = "SELECT SUM(amount) AS total FROM actions WHERE in_kind = 0";
  $sth = $dbh->prepare( $query );
  $sth->execute();
  $row = $sth->fetch( PDO::FETCH_ASSOC );
  ($result = $row['total']) || ($result = 0);
  return $result;
}

function get_actions( $ids = array() ) {
  $dbh = db_connect('core');
  $result = array();

  $query = "SELECT * FROM actions ";
  if ( !empty($ids) ) {
    $query .= "WHERE actionid IN (". implode(',',array_filter($ids)) .") ";
  }
  $sth = $dbh->prepare( $query );

  $sth->execute();

  while ( $row = $sth->fetch( PDO::FETCH_ASSOC ) ) {
    $row = stripslashes_array( $row );
    $result[ $row['actionid'] ] = $row;
  }

  return $result;
}

function get_actions_cross( $ids = array() ) {
  $dbh = db_connect('core');
  $result = array();

  $query = "SELECT actions.*,contacts.*,accounts.*,location.name AS location_name,contacts.name AS contact_name,COALESCE(accounts.name,'[No Account]') AS account_name,actions.note FROM actions LEFT JOIN contacts USING (contactid) LEFT JOIN location USING (locationid) LEFT JOIN accounts USING (accountid) ";
  if ( !empty($ids) ) {
    $query .= "WHERE actionid IN (". implode(',',array_filter($ids)) .") ";
  }
  $sth = $dbh->prepare( $query );

  $sth->execute();

  while ( $row = $sth->fetch( PDO::FETCH_ASSOC ) ) {
    $row = stripslashes_array( $row );
    $result[ $row['actionid'] ] = $row;
  }

  return $result;
}

function search_actions_cross( $terms ) {
  $wheres = array();
  $data = array();
  $result = array();
  foreach ( $terms as $field => $term ) {
    $op = '=';
    switch ( $field ) {
      case 'locationid':
        $field = 'actions.locationid';
      case 'contactid':
      case 'accountid':
        break;  // no-op
      case 'amount':
        $op = 'LIKE';
        $term = preg_replace( '/[^-\d\.]/', '', $term );
        $term = number_format($term,2,'.','');
        break;
      case 'receipt':
      case 'po':
        $op = 'LIKE';
        $term = '%'. $term;
        break;
      case 'udate':
        $field = 'DATE(udate)';
        break;
      case 'date':
        $field = 'actions.date';
        $op = '>';
        $timestamp = strtotime($term);
        if ( $term === NULL ) {
          $term = date( 'Y-m-d', time() - (31622400) ); // seconds in a leap year
        }
        elseif ( $timestamp === false ) {
          return $result;
        }
        else {
          $term = date( 'Y-m-d', $timestamp );
        }
        break;
    }
    $wheres[] = "$field $op ?";
    $data[] = $term;
  }

  $dbh = db_connect('core');

  $query = "SELECT actions.*,contacts.*,accounts.*,location.name AS location_name,contacts.name AS contact_name,COALESCE(accounts.name,'[No Account]') AS account_name,actions.note FROM actions LEFT JOIN contacts USING (contactid) LEFT JOIN location USING (locationid) LEFT JOIN accounts USING (accountid) ";
  if ( !empty($wheres) ) {
      $query .= "WHERE ". ( implode( ' AND ', $wheres) );
  }
  $sth = $dbh->prepare( $query );

  $sth->execute($data);

  while ( $row = $sth->fetch( PDO::FETCH_ASSOC ) ) {
    $row = stripslashes_array( $row );
    $result[ $row['actionid'] ] = $row;
  }

  return $result;
}

function get_accounts( $ids = array() ) {
  $dbh = db_connect('core');
  $result = array();

  $query = "SELECT *,accounts.name,location.name as location_name FROM accounts LEFT JOIN location USING (locationid) ";
  if ( !empty($ids) ) {
    $query .= "WHERE accountid IN (". implode(',',array_filter($ids)) .") ";
  }
  $sth = $dbh->prepare( $query );

  $sth->execute();

  while ( $row = $sth->fetch( PDO::FETCH_ASSOC ) ) {
    $row = stripslashes_array( $row );
    $result[ $row['accountid'] ] = $row;
  }

  return $result;
}

function get_accounts_at_location( $locationid, $ids = array() ) {
  $dbh = db_connect('core');
  $result = array();

  $query = "SELECT accounts.*,location.name as location_name FROM accounts LEFT JOIN location USING (locationid) WHERE locationid = :loc";
  if ( !empty($ids) ) {
    $query .= " AND accountid IN (". implode(',',array_filter($ids)) .") ";
  }
  $sth = $dbh->prepare( $query );
  $sth->bindParam( ':loc',$locationid );

  $sth->execute();

  while ( $row = $sth->fetch( PDO::FETCH_ASSOC ) ) {
    $row = stripslashes_array( $row );
    $result[ $row['accountid'] ] = $row;
  }

  return $result;
}

function get_accounts_with_total( $ids = array() ) {
  $dbh = db_connect('core');
  $result = array();

  $query = "SELECT accounts.*,location.name as location_name,sum(actions.amount) as total FROM accounts LEFT JOIN location USING (locationid) LEFT JOIN actions USING (accountid) ";
  if ( !empty($ids) ) {
    $query .= "WHERE accountid IN (". implode(',',array_filter($ids)) .") ";
  }
  $query .= "GROUP BY accounts.accountid";
  $sth = $dbh->prepare( $query );

  $sth->execute();

  while ( $row = $sth->fetch( PDO::FETCH_ASSOC ) ) {
    $row = stripslashes_array( $row );
    $result[ $row['accountid'] ] = $row;
  }

  return $result;
}

function get_contacts( $ids = array() ) {
  $dbh = db_connect('core');
  $result = array();

  $query = "SELECT * FROM contacts ";
  if ( !empty($ids) ) {
    $query .= "WHERE contactid IN (". implode(',',array_filter($ids)) .") ";
  }
  $sth = $dbh->prepare( $query );

  $sth->execute();

  while ( $row = $sth->fetch( PDO::FETCH_ASSOC ) ) {
    $row = stripslashes_array( $row );
    $result[ $row['contactid'] ] = $row;
  }

  return $result;
}

function update_contact( $contactid, $updates ) {
  $dbh = db_connect('core');
  $query;
  $data = array();
  if ( !empty($contactid) ) {
      $query = "UPDATE contacts SET ";
      foreach ( $updates as $field => $value ) {
          $query .= "$field = ?, ";
          $data[] = $value;
      }
      $query = substr( $query, 0, -2 );
      $query .= " WHERE contactid = ?";
      $data[] = $contactid;
  }
  else {
      $values = "";
      $query = "INSERT INTO contacts (";
      foreach ( $updates as $field => $value ) {
          $query .= "$field,";
          $values .= "?,";
          $data[] = $value;
      }
      $query = substr( $query, 0, -1 );
      $values = substr( $values, 0, -1 );
      $query .= ") VALUES ($values)";
  }
  $sth = $dbh->prepare($query);
  $sth->execute($data);
  if ( empty($contactid) ) {
      $contactid = $dbh->lastInsertId('contactid');
  }

  return $contactid;
}

function update_account( $accountid, $updates ) {
  $dbh = db_connect('core');
  $query;
  $data = array();
  if ( !empty($accountid) ) {
      $query = "UPDATE accounts SET ";
      foreach ( $updates as $field => $value ) {
          $query .= "$field = ?, ";
          $data[] = $value;
      }
      $query = substr( $query, 0, -2 );
      $query .= " WHERE accountid = ?";
      $data[] = $accountid;
  }
  else {
      $values = "";
      $query = "INSERT INTO accounts (";
      foreach ( $updates as $field => $value ) {
          $query .= "$field,";
          $values .= "?,";
          $data[] = $value;
      }
      $query = substr( $query, 0, -1 );
      $values = substr( $values, 0, -1 );
      $query .= ") VALUES ($values)";
  }
  $sth = $dbh->prepare($query);
  $sth->execute($data);
  if ( empty($accountid) ) {
      $accountid = $dbh->lastInsertId('accountid');
  }

  return $accountid;
}

function update_action( $actionid, $updates ) {
  $dbh = db_connect('core');
  $query;
  $data = array();
  if ( !empty($actionid) ) {
      $query = "UPDATE actions SET ";
      foreach ( $updates as $field => $value ) {
          $query .= "$field = ?, ";
          $data[] = $value;
      }
      $query = substr( $query, 0, -2 );
      $query .= " WHERE actionid = ?";
      $data[] = $actionid;
  }
  else {
      $values = "";
      $query = "INSERT INTO actions (";
      foreach ( $updates as $field => $value ) {
          $query .= "$field,";
          $values .= "?,";
          $data[] = $value;
      }
      if ( ! in_array( 'udate', array_keys($updates) ) ) {
         $query .= "udate";
         $values .= "NOW()";
      }
      else {
         $query = substr( $query, 0, -1 );
         $values = substr( $values, 0, -1 );
      }
      $query .= ") VALUES ($values)";
  }
  $sth = $dbh->prepare($query);
  $sth->execute($data);
  if ( empty($actionid) ) {
      $actionid = $dbh->lastInsertId('actionid');
  }

  return $actionid;
}

function delete_action( $actionid ) {
  $result = 0;
  $dbh = db_connect('core');
  $query;
  if ( !empty($actionid) ) {
      $query = "DELETE FROM actions WHERE actionid = :act";

      $sth = $dbh->prepare($query);
      $sth->bindParam( ':act',$actionid );
      $sth->execute();
      $result = $sth->errorCode() !== '00000';
  }
  return $result;
}

function modlog_add( $table, $id, $field, $new_value, $old_value ) {
    $mod_table = '';
    $id_column = '';
    switch ( $table ) {
        case 'action':
            $mod_table = 'modlog_actions';
            $id_column = 'actionid';
            break;
    }

    $dbh = db_connect('core');
    $query = "INSERT INTO ${mod_table} ($id_column,field,old_value,new_value,userid,ipAddress) VALUES (:id,:field,:oldval,:newval,:user,:client)";
    $sth = $dbh->prepare($query);
    $sth->bindValue( ':id', $id );
    $sth->bindValue( ':field', $field );
    $sth->bindValue( ':oldval', $old_value );
    $sth->bindValue( ':newval', $new_value );
    $sth->bindValue( ':user', !empty($_SESSION['loggedin_user'])?$_SESSION['loggedin_user']['userid']:null );
    $sth->bindValue( ':client', inet_pton(get_remote_ip()) );
    $sth->execute();
    $result = $sth->errorCode() !== '00000';
    return $result;
}

function modlog_get( $table, $id ) {
    $mod_table = '';
    $id_column = '';
    switch ( $table ) {
        case 'action':
            $mod_table = 'modlog_actions';
            $id_column = 'actionid';
            break;
    }

    $dbh = db_connect('core');
    $query = "SELECT * FROM $mod_table WHERE $id_column = :id";
    $sth = $dbh->prepare($query);
    $sth->bindValue( ':id', $id );
    $sth->execute();
    $result = $sth->errorCode() !== '00000';
    if ( ! $result ) {
        $result = [];
        while ( $row = $sth->fetch( PDO::FETCH_ASSOC ) ) {
            $row = stripslashes_array( $row );
            $result[] = $row;
        }
    }
    return $result;
}

function modlog_search( $table, $terms ) {
    $mod_table = '';
    $id_column = '';
    switch ( $table ) {
        case 'action':
            $mod_table = 'modlog_actions';
            $id_column = 'actionid';
            break;
    }

    $dbh = db_connect('core');

    foreach ( $terms as $field => $term ) {
        $op = '=';
        $column = substr($field,0,3);
        $field = substr($field,4);
        if ( in_array($field,['date','mod_date']) ) {
            $timestamp = strtotime($term);
            if ( $timestamp !== false ) {
                $term = date( 'Y-m-d', $timestamp );
            }
        }
        switch ( $field ) {
            case 'mod_date':
                $wheres[] = "(DATE(timestamp) = ?)";
                $data[] = $term;
                continue 2;
            case 'locationid':
            case 'contactid':
            case 'accountid':
            case 'date':
                break;  // no-op
            case 'amount':
                $op = 'LIKE';
                $term = preg_replace( '/[^-\d\.]/', '', $term );
                $term = number_format($term,2,'.','');
                break;
            case 'receipt':
            case 'po':
                $op = 'LIKE';
                $term = '%'. $term;
                break;
        }
        $wheres[] = "(field = '$field' AND ${column}_value $op ?)";
        $data[] = $term;
    }

    if ( !empty($wheres) ) {
        $where_str = "WHERE ". ( implode( ' AND ', $wheres) );
    }
    $query = "SELECT DISTINCT $id_column FROM $mod_table $where_str";
    $sth = $dbh->prepare( $query );

    $sth->execute($data);

    while ( $row = $sth->fetch( PDO::FETCH_ASSOC ) ) {
        $result[] = $row[$id_column];
    }

    switch ( $table ) {
        case 'action':
            $result = get_actions_cross($result);
            break;
    }

    return $result;
}

?>
