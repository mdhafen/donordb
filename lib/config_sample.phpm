<?php
$config = array(
	'base_dir'        => '/var/www/',  // sane defaults
	'base_url'	  => '/', // these are set below
	'secure_phrase'   => '',
	'authen_modules'  => array(
		'db'       => 'core',
		'external' => 0,
		'ldap'     => 0,
	),
	'password_modes'   => array(
		'openssl_bf_cbc_sha512' => 1,
		'openssl_bf_cbc_noiv_sha512' => 0,
		'mcrypt_bf_ecb_sha512' => 1,
		'openssl_bf_cbc' => 1,
		'openssl_bf_cbc_noiv' => 0,
		'mcrypt_bf_ecb' => 1,
		'salted_sha512' => 0,
		'md5' => 1,
		'upgrade_from_old' => 1,
	),
	'user_external_module' => '',
	'trusted_proxies' => array(),
	'database'        => array(
		'core' => array(
			'write' => array(
				'engine' => 'mysql',
				'host'   => 'localhost',
				'schema' => 'fdonordb',
				'user'   => 'donor',
				'passwd' => 'fdonorpassword',
			),
		),
	),
	'ldap' => array(
		'core' => array(
			'server' => '',
			'base' => 'dc=example',
			'userdn' => 'cn=root,dc=example',
			'passwd' => '',
			'roles' => array(
				4 => 'cn=Staff,dc=example',
				6 => 'cn=Technology,dc=example',
			),
			// role with most permissions
			'sysadmin_role' => 6,
		),
	),
	'auth' => array(
		1   => "reports",
		2   => "actions",
		4   => "accounts",
		8   => "contacts",
		16  => "manage_site",
	),
	'role' => array(
		1 => array(
			'name' => 'board member',
			'auth' => 1, // report
		),
		2 => array(
			'name' => 'manager',
			'auth' => 15, // report,actions,accounts,contacts
		),
		3 => array(
			'name' => 'sysadmin',
			'auth' => 31, // all
		),
	),
);

$config['base_dir'] = realpath( dirname( __FILE__ ) . '/..' );
if ( empty($_SERVER['REQUEST_URI']) ) {
	if ( !empty($_SERVER['SCRIPT_NAME']) && isset($_SERVER['PATH_INFO']) ) {
		$config['this_url'] = $_SERVER['SCRIPT_NAME'] . $_SERVER['PATH_INFO'];
	}
	else {
		$config['this_url'] = '/';
	}
}
elseif ( strpos($_SERVER['REQUEST_URI'],'?') !== false ) {
	$config['this_url'] = substr( $_SERVER['REQUEST_URI'], 0, strpos($_SERVER['REQUEST_URI'],'?') );
}
else {
	$config['this_url'] = $_SERVER['REQUEST_URI'];
}

$dir = $config['base_dir'] . '/webroot/';
$count = 1;
$lcs = '/';
while ( strripos( $dir, substr( $config['this_url'], 0, $count ) ) > 0 ) {
	$lcs = substr( $config['this_url'], 0, $count );
	if ( $count+1 > mb_strlen( $config['this_url'] ) ) { break; }
	$count = strpos( $config['this_url'], '/', $count + 1 );
	if ( $count < 0 || $count === false ) { break; }
}

/*
 These next two are to catch load balancers (reverse proxies).
 You may have to set X-Forwarded-Port and X-Forwarded-Proto
 in the load balancer config
  apache2: RequestHeader set X-Forwarded-Proto https

 Also, these should be secured in the server config to be rejected in headers
 except from certain trusted clients (the load balancers)
  (anything from the client, like these, can be easily spoofed
 */
$host = '';
if ( !empty($_SERVER['REMOTE_ADDR']) && ( !empty($_SERVER['SERVER_NAME']) || (!empty($config['trusted_proxies']) && !empty($_SERVER['HTTP_X_FORWARDED_SERVER']) ) ) ) {
	if ( ! empty($config['trusted_proxies']) && array_search($_SERVER['REMOTE_ADDR'],$config['trusted_proxies']) !== false ) {
		if ( isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https' || isset($_SERVER['HTTP_X_FORWARDED_SSL']) && $_SERVER['HTTP_X_FORWARDED_SSL'] == 'on' ) {
			$host = "https://". $_SERVER['HTTP_X_FORWARDED_SERVER'];
			if ( isset($_SERVER['HTTP_X_FORWARDED_PORT']) && $_SERVER['HTTP_X_FORWARDED_PORT'] != '443' ) {
				$host .= ':'. $_SERVER['HTTP_X_FORWARDED_PORT'];
			}
		}
		else if ( isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'http' ) {
			$host = "http://". $_SERVER['HTTP_X_FORWARDED_SERVER'];
			if ( isset($_SERVER['HTTP_X_FORWARDED_PORT']) && $_SERVER['HTTP_X_FORWARDED_PORT'] != '80' ) {
				$host .= ':'. $_SERVER['HTTP_X_FORWARDED_PORT'];
			}
		}
	}
	else if ( isset( $_SERVER['HTTPS'] ) && $_SERVER['HTTPS'] != 'off' ) {
		$host = "https://". $_SERVER['SERVER_NAME'];
		if ( isset($_SERVER['SERVER_PORT']) && $_SERVER['SERVER_PORT'] != '443' ) {
			$host .= ':'. $_SERVER['SERVER_PORT'];
		}
	}
	else {
		$host = "http://". $_SERVER['SERVER_NAME'];
		if ( isset($_SERVER['SERVER_PORT']) && $_SERVER['SERVER_PORT'] != '80' ) {
			$host .= ':'. $_SERVER['SERVER_PORT'];
		}
	}
}
$config['base_url'] = $host . $lcs;
if ( substr( $config['base_url'], -1, 1 ) != '/' ) {
	$config['base_url'] .= '/';
}

// Make sure all class definitions are loaded before this!
session_name( 'FDDSESSID' );
if ( !empty($config['secure_only']) ) {
  $timeout = empty($config['session_expiration']) ? 0 : $config['session_expiration'];
  $start = strpos( $config['base_url'], '/' ) + 2;
  $host = substr( $config['base_url'], $start, strpos($config['base_url'],'/',$start+1)-$start );
  if ( !isset( $_SERVER['HTTPS'] ) || $_SERVER['HTTPS'] == 'off' ) {
    include_once( $config['base_dir'] .'/lib/output.phpm' );
    redirect( 'https://'. $host .'/'. $lcs );
    exit;
  }
  session_set_cookie_params( $timeout, '/', $host, true, true );
}
session_start();
?>
